[{"C:\\projects\\portfolio-v2\\src\\index.js":"1","C:\\projects\\portfolio-v2\\src\\reportWebVitals.js":"2","C:\\projects\\portfolio-v2\\src\\App.js":"3","C:\\projects\\portfolio-v2\\src\\Markdown\\Markdown.js":"4","C:\\projects\\portfolio-v2\\src\\Markdown\\CodeBlock.js":"5","C:\\projects\\portfolio-v2\\src\\Images.js":"6","C:\\projects\\portfolio-v2\\src\\Pages\\Home\\Home.js":"7","C:\\projects\\portfolio-v2\\src\\Pages\\Home\\technologies.js":"8","C:\\projects\\portfolio-v2\\src\\Pages\\Footer\\Footer.js":"9","C:\\projects\\portfolio-v2\\src\\Pages\\Navbar\\Navbar.js":"10","C:\\projects\\portfolio-v2\\src\\Pages\\Home\\components\\Technologies.js":"11","C:\\projects\\portfolio-v2\\src\\Pages\\Home\\components\\Hero.js":"12","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Projects.js":"13","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\projectsExports.js":"14","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Project\\Project.js":"15","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\BedTime.js":"16","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\HandyDiet.js":"17","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\Adopty.js":"18","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\Calculator.js":"19","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\MovieSearch.js":"20"},{"size":585,"mtime":1609097047244,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":763,"mtime":1609116029900,"results":"24","hashOfConfig":"22"},{"size":358,"mtime":1609110057346,"results":"25","hashOfConfig":"22"},{"size":371,"mtime":1609094540413,"results":"26","hashOfConfig":"22"},{"size":1279,"mtime":1609049852042,"results":"27","hashOfConfig":"28"},{"size":560,"mtime":1609103519167,"results":"29","hashOfConfig":"22"},{"size":1343,"mtime":1609050238354,"results":"30","hashOfConfig":"22"},{"size":425,"mtime":1609109582721,"results":"31","hashOfConfig":"22"},{"size":966,"mtime":1609100674718,"results":"32","hashOfConfig":"22"},{"size":3818,"mtime":1609101644842,"results":"33","hashOfConfig":"22"},{"size":1493,"mtime":1609098635013,"results":"34","hashOfConfig":"22"},{"size":1593,"mtime":1609271846863,"results":"35","hashOfConfig":"22"},{"size":456,"mtime":1609200094732,"results":"36","hashOfConfig":"22"},{"size":876,"mtime":1609271823422,"results":"37","hashOfConfig":"22"},{"size":7760,"mtime":1609277784186,"results":"38","hashOfConfig":"22"},{"size":378,"mtime":1609199235723,"results":"39","hashOfConfig":"22"},{"size":370,"mtime":1609199729616,"results":"40","hashOfConfig":"22"},{"size":378,"mtime":1609199836605,"results":"41","hashOfConfig":"22"},{"size":380,"mtime":1609199924872,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"vglubc",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rw7p2r",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\projects\\portfolio-v2\\src\\index.js",[],["88","89"],"C:\\projects\\portfolio-v2\\src\\reportWebVitals.js",[],"C:\\projects\\portfolio-v2\\src\\App.js",["90"],"import React, { Fragment, useEffect } from 'react'\r\nimport './App.css'\r\nimport {\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\nimport Navbar from './Pages/Navbar/Navbar';\r\nimport Footer from './Pages/Footer/Footer';\r\nimport Home from './Pages/Home/Home';\r\nimport Projects from './Pages/Projects/Projects';\r\nimport Project from './Pages/Projects/Project/Project';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects />\r\n        </Route>\r\n        <Route path=\"/project/:name\">\r\n          <Project />\r\n        </Route>\r\n      </Switch>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n\r\n","C:\\projects\\portfolio-v2\\src\\Markdown\\Markdown.js",[],"C:\\projects\\portfolio-v2\\src\\Markdown\\CodeBlock.js",[],"C:\\projects\\portfolio-v2\\src\\Images.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Home\\Home.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Home\\technologies.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Footer\\Footer.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Navbar\\Navbar.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Home\\components\\Technologies.js",["91"],"import { useEffect } from 'react';\r\nimport ScrollReveal from 'scrollreveal';\r\nimport {\r\n  javascript,\r\n  ionic,\r\n  vue,\r\n  react,\r\n  css,\r\n  node,\r\n  postgres,\r\n  mysql,\r\n  mongo,\r\n  ubuntu,\r\n  php,\r\n  figma,\r\n  vscode,\r\n  git,\r\n  github,\r\n  capacitor\r\n} from '../technologies';\r\n\r\nconst Technologies = () => {\r\n\r\n  useEffect(() => {\r\n    ScrollReveal({\r\n      duration: 1000,\r\n    })\r\n    const options = {\r\n      distance: '20px',\r\n      origin: 'left',\r\n      interval: 120,\r\n    };\r\n    const fadeOptions = {\r\n      interval: 480\r\n    }\r\n    ScrollReveal().reveal('.reveal', options)\r\n    ScrollReveal().reveal('.fade-reveal', fadeOptions)\r\n  }, []);\r\n\r\n  // TODO: Instead of html replace with a JSON\r\n  // array of objects about the technologies\r\n  // and map over the array.\r\n  return (\r\n    <section className=\"technologies mt-3 container\" style={{ marginBottom: '75px' }}>\r\n      <h1 className=\"header-links\"><strong>Technologies</strong></h1>\r\n      <h3 className=\"pt-3 header-links fade-reveal load-hidden\">Front End</h3>\r\n      <div id=\"front-end\" className=\"mx-3 icons\">\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={javascript} alt=\"\" />\r\n          <span>JavaScript</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={react} alt=\"\" />\r\n          <span>React</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={vue} alt=\"\" />\r\n          <span>Vue</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={ionic} alt=\"\" />\r\n          <span>Ionic</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={css} alt=\"\" />\r\n          <span>CSS</span>\r\n        </div>\r\n      </div>\r\n\r\n      <h3 className=\"pt-5 header-links fade-reveal load-hidden\">Back End</h3>\r\n      <div id=\"back-end\" className=\"mx-3 icons\">\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={node} alt=\"\" />\r\n          <span>Node</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={postgres} alt=\"\" />\r\n          <span>PostgreSQL</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={mysql} alt=\"\" />\r\n          <span>MySQL</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={mongo} alt=\"\" />\r\n          <span>MongoDB</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={php} alt=\"\" />\r\n          <span>PHP</span>\r\n        </div>\r\n      </div>\r\n\r\n      <h3 className=\"pt-5 header-links fade-reveal load-hidden\">DevOps & Tools</h3>\r\n      <div className=\"mx-3 icons\" id=\"dev-ops\">\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={git} alt=\"\" />\r\n          <span>Git</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={github} alt=\"\" />\r\n          <span>Github</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={capacitor} alt=\"\" />\r\n          <span>Capacitor</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={figma} alt=\"\" />\r\n          <span>Figma</span>\r\n        </div>\r\n        <div className=\"reveal load-hidden\">\r\n          <img className=\"img-responsive\" src={vscode} alt=\"\" />\r\n          <span>VSCode</span>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Technologies;","C:\\projects\\portfolio-v2\\src\\Pages\\Home\\components\\Hero.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Projects.js",["92","93"],"import { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    handyDiet,\r\n    bedTime,\r\n    movieSearch,\r\n    calc,\r\n    adopty\r\n} from './projectsExports';\r\n\r\nconst Projects = () => {\r\n    const projects = [\r\n        {\r\n            name: 'HandyDiet',\r\n            image: handyDiet,\r\n        },\r\n        {\r\n            name: 'bedtime-v2',\r\n            image: bedTime,\r\n        },\r\n        {\r\n            name: 'Adopty',\r\n            image: adopty\r\n        },\r\n        {\r\n            name: 'MovieSearch',\r\n            image: movieSearch\r\n        },\r\n        {\r\n            name: 'Calculator',\r\n            image: calc,\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div style={{ width: '75vw', margin: 'auto', display: 'flex', marginBottom: '40px', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n            {projects.map((p, index) => {\r\n                return (\r\n                    <div key={index} className=\"card m-3\" style={{ width: '18rem' }}>\r\n                        <img className=\"card-img-top\" src={p.image} alt=\"Card image cap\" />\r\n                        <div className=\"card-body text-center\">\r\n                            <h5 className=\"card-title\">{p.name}</h5>\r\n                            {/* <p className=\"card-text\">{p.description}</p> */}\r\n                            <Link to={`/project/${p.name}`} style={{ border: 'none', backgroundColor: '#1e2631' }} className=\"btn btn-primary\">View</Link>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\projectsExports.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Project\\Project.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\BedTime.js",["94"],"import Markdown from '../../../Markdown/Markdown';\r\n\r\nconst BedTime = ({ name }) => {\r\n    const width = \"w\"\r\n    const mb = \"my-mb\"\r\n    const markdown = `\r\n# **${name}**\r\n## *What you will learn*\r\n- First-class functions: [Ex: Assigning functions in variables](https://en.wikipedia.org/wiki/First-class_function)\r\n- Composability: [Writing modular and stateless functions](https://en.wikipedia.org/wiki/Composability#:~:text=Composability%20is%20a%20system%20design,to%20satisfy%20specific%20user%20requirements.)\r\n- Manipulating the DOM: [Check out MDN's event reference and try others!](https://developer.mozilla.org/en-US/docs/Web/Events)\r\n- The \\`Date()\\` object & constructor: [Details about the object and it's methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)\r\n- Pure functions and immutable data\r\n- Common patterns that bridge the gap between plain JavaScript and React.\r\n- Rendering HTML and CSS dynamically.\r\n- Form's and validation.\r\n##### Step One: Get our sleep cycles  \r\n> - Create a first-class function called \\`getSleepCycles(hour, minute)\\` that we'll assign to a variable later.\r\n> - Our function \\`getSleepCycles(hour, minute)\\` takes two parameters, hour and minute.\r\n> - For each sleep parameters cycle, instantiate a new \\`Date\\` object and assign it to a variable.  \r\n> - We only need the hours and minutes so we can omit the first three parameters of the \\`Date\\`. \r\n> - [Check out Mozilla's](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Syntax) \\`Date()\\` constructor docs to see the other parameters like year, month, etc. or know more about the \\`Date()\\` constructor.\r\n> - On each subsequent cycle variable subtract one hour and thirty minutes.\r\n> - Return an array so we can use \\`Array\\` methods later.\r\n~~~js\r\nconst getSleepCycles = (hour, minute) => {\r\n    const firstCycle = new Date(null, null, null, hour - 9, minute);\r\n    const secondCycle = new Date(null, null, null, hour - 7, minute - 30);\r\n    const thirdCycle = new Date(null, null, null, hour - 6, minute);\r\n    const fourthCycle = new Date(null, null, null, hour - 4, minute - 30);\r\n\r\n    return [firstCycle, secondCycle, thirdCycle, fourthCycle];\r\n};\r\n~~~\r\n##### Step Two: Handle AM and PM\r\n> - Let's make a function \\`setSleepCyclesPM(period, sleepCyclesArray)\\` whose parameters are the period ('AM' or 'PM') and the array of sleep cycles we returned earlier.\r\n> - Copy our \\`Date\\` by mapping through the dates and calling the \\`new Date()\\` constructor. You can't just use spread syntax \\`[...]\\` because inside the array are instances of \\`Date\\` data-type not \\`Object\\`.  \r\n> - Inside our function body write an \\`if\\` statement to check the strict equality \\`===\\` of the period argument and the 'AM' or 'PM' string that comes from our form.\r\n> - If our conditional is true, then create a cycles variable and set it to our sleepCyclesArray and call \\`map\\`.\r\n> - Inside the \\`map\\` callback function create a variable to get the hours \\`getHours() - 12\\` of each sleep cycle we mapped.\r\n> - Set every mapped sleepCycle object's hours \\`setHours()\\` to our hours variable.\r\n> - The last thing we want to do is simple return our new array of sleep cycles!\r\n> - Since \\`map\\` is an pure method it returns a copy of the array it mapped.\r\n~~~js\r\nconst setSleepCyclesPM = (period, sleepCyclesArray) => {\r\n    const copy = sleepCyclesArray.map(s => new Date(s.getTime()))\r\n    if (period === 'PM') {\r\n        return copy.map(sleepCycleObject => {\r\n            const hours = sleepCycleObject.getHours() - 12;\r\n            sleepCycleObject.setHours(hours);\r\n            return sleepCycleObject;\r\n        });\r\n    };\r\n    return copy;\r\n};\r\n~~~\r\n##### Step Three: Convert 24 hour to 12 hour\r\n> - Our app works nicely until you try and calculate a time with the hour 12.\r\n> - Our date objects are being instantiated as 24 hour time zones, but we need twelve.\r\n> - Let's write a function \\`setSleepCyclesTwelve(hours, sleepCyclesArray)\\` whose parameters are the hours input and array of sleep cycles.\r\n> - Just like before let's write another conditional. This time, to check if the hours input is 12.\r\n> - If so, inside the \\`map\\` callback function create an hours variable to get the hours \\`getHours()\\`.\r\n> - Call \\`setHours()\\` on each sleep cycle object and pass in hours variable as it's parameter.\r\n> - Return the new array of sleep cycles. Again, using the pure \\`map\\` method to not mutate our data\r\n~~~js\r\nconst setSleepCyclesTwelve = (hour, sleepCyclesArray) => {\r\n    if (hour === '12') {\r\n        const cycle = sleepCyclesArray.map(sleepCycleObject => {\r\n            const hours = sleepCycleObject.getHours() + 12\r\n            sleepCycleObject.setHours(hours);\r\n        });\r\n        return cycle;\r\n    };\r\n};\r\n~~~\r\n##### Step Four: Handle form validation.\r\n> - We don't want the user submitting a form with an empty value. Let's fix that.\r\n> - Write a function \\`isEmpty()\\` whose parameters are the hour, minute, and period.\r\n> - Create an errors variable and set it to the DOM element with the \\`id\\` of errors using \\`querySelector\\`. You can use \\`getElementById\\` as well. I only used \\`querySelector\\` to play with it.\r\n> - Write an \\`if\\` statment to check the strict equality \\`===\\` of each argument value.\r\n> - If they're empty the \\`textContent\\` property of our DOM element errors variable to a string 'You must enter the fields.'\r\n> - On the errors DOM element call \\`setAttribute\\`. The first argument is the attribute name. In our case, a class. The second argument the value we want to set it to. In our case, it's a css class in our \\`styles.css\\` file.\r\n> - Return true as our function expression's name is \\`isEmpty\\` because our form is in fact, empty.\r\n> - If the parameters pass our conditional then we'll just set the errors DOM element \\`textContent\\` property to an empty string.\r\n> - Return false because, well, \\`isEmpty\\` is false.\r\n> - Since \\`isEmpty\\` is a first-class function and returns a \\`Boolean\\` we can use it later to determine whether or not to render errors or the sleep cycles.\r\n~~~js\r\nconst isEmpty = (hour, minute, period) => {\r\n    const errors = document.querySelector('div#errors');\r\n    if (hour === '' || minute === '' || period === '') {\r\n        errors.textContent = 'You must fill in the fields.';\r\n        errors.setAttribute('class', 'error');\r\n        return true;\r\n    };\r\n    errors.textContent = '';\r\n    return false;\r\n};\r\n~~~\r\n##### Step Five: Set our date object to en-US 12-hour time with AM/PM\r\n> - Now let's create a function \\`toTwelveHourTimeString()\\` to set our array sleep cycles to en-US\r\n> - It will take one parameter, our array of sleep cycles.\r\n> - Now we're going to assign a variable \\`twelveHourArr\\` to a function \\`map\\`.\r\n> - On each iteration we'll call the method \\`toLocaleTimeString\\` on each object and before pass in a string as the first paramater to specify our [locale](https://en.wikipedia.org/wiki/Locale_(computer_software)). The second parameter will be an object with properties describing how we'd like our \\`Date\\` object.\r\n> - By now you already know this, but make sure to explicitly \\`return\\` each object in multi-line arrow functions. In contrast to a single line arrow function in which you can omit the return\r\n> - The assigned variable will hold the new returned array of sleep cycles\r\n~~~js\r\nconst toTwelveHourTimeString = (arr) => {\r\n    const twelveHourArr = arr.map(obj => {\r\n        return obj.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n    });\r\n};\r\n~~~\r\n`\r\n\r\n    return (\r\n        <div>\r\n            <Markdown markdown={markdown} mdClassName={width} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BedTime;","C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\HandyDiet.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\Adopty.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\Calculator.js",[],"C:\\projects\\portfolio-v2\\src\\Pages\\Projects\\Details\\MovieSearch.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":13,"column":3,"nodeType":"101","messageId":"102","endLine":13,"endColumn":9},{"ruleId":"99","severity":1,"message":"104","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":40,"column":25,"nodeType":"107","endLine":40,"endColumn":92},{"ruleId":"99","severity":1,"message":"108","line":5,"column":11,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ubuntu' is defined but never used.","'Fragment' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'mb' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]