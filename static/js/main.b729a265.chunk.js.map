{"version":3,"sources":["assets/images/javascript.svg","assets/images/ionic.svg","assets/images/vue.svg","assets/images/react.svg","assets/images/css.svg","assets/images/node.svg","assets/images/postgres.svg","assets/images/mysql.svg","assets/images/mongo.svg","assets/images/ubuntu.svg","assets/images/php.svg","assets/images/figma.svg","assets/images/vscode.svg","assets/images/git.svg","assets/images/github.svg","assets/images/capacitor.svg","assets/images/handydiet.png","assets/images/bedtime.png","assets/images/calc.png","assets/images/moovy.png","assets/images/adopty.png","assets/images/handydietv2.png","Pages/Navbar/Navbar.js","Pages/Footer/Footer.js","Markdown/CodeBlock.js","Markdown/Markdown.js","Pages/Home/technologies.js","Pages/Home/components/Technologies.js","Pages/Home/components/Hero.js","Pages/Home/Home.js","Pages/Projects/projectsExports.js","Pages/Projects/Projects.js","Pages/Projects/Details/BedTime.js","Pages/Projects/Details/HandyDiet.js","Pages/Projects/Details/Adopty.js","Pages/Projects/Details/Calculator.js","Pages/Projects/Details/MovieSearch.js","Pages/Projects/Details/HandyDietV2.js","Pages/Projects/Project/Project.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","narrowLinks","useRef","handleClose","current","classList","add","className","id","to","icon","faHome","faPencilRuler","href","faGithub","onClick","toggle","ref","Footer","style","position","width","bottom","CodeBlock","value","language","tomorrow","children","Markdown","markdown","mdClassName","renderers","code","javascript","require","default","ionic","vue","react","css","node","postgres","mysql","mongo","php","figma","vscode","git","github","capacitor","Technologies","useEffect","ScrollReveal","duration","reveal","distance","origin","interval","marginBottom","src","alt","Hero","Home","handyDiet","bedTime","calc","movieSearch","adopty","handydietV2","Projects","projects","name","image","tech","class","margin","fontSize","display","justifyContent","flexWrap","map","p","index","t","border","backgroundColor","BedTime","window","scrollTo","charAt","toUpperCase","slice","HandyDiet","Adopty","Calculator","MovieSearch","HandyDietV2","Project","useParams","console","error","App","document","title","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b729a265.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/javascript.2ccf65fc.svg\";","export default __webpack_public_path__ + \"static/media/ionic.7cf1fe37.svg\";","export default __webpack_public_path__ + \"static/media/vue.0b086d12.svg\";","export default __webpack_public_path__ + \"static/media/react.81db2bfe.svg\";","export default __webpack_public_path__ + \"static/media/css.c0d58b03.svg\";","export default __webpack_public_path__ + \"static/media/node.59c00966.svg\";","export default __webpack_public_path__ + \"static/media/postgres.6174db8b.svg\";","export default __webpack_public_path__ + \"static/media/mysql.e5a509a5.svg\";","export default __webpack_public_path__ + \"static/media/mongo.042e003a.svg\";","export default __webpack_public_path__ + \"static/media/ubuntu.7d9bed33.svg\";","export default __webpack_public_path__ + \"static/media/php.8c49448b.svg\";","export default __webpack_public_path__ + \"static/media/figma.753c0742.svg\";","export default __webpack_public_path__ + \"static/media/vscode.f8f6eda9.svg\";","export default __webpack_public_path__ + \"static/media/git.a63f9eab.svg\";","export default __webpack_public_path__ + \"static/media/github.255db585.svg\";","export default __webpack_public_path__ + \"static/media/capacitor.a27c08a6.svg\";","export default __webpack_public_path__ + \"static/media/handydiet.b0115a49.png\";","export default __webpack_public_path__ + \"static/media/bedtime.3656f40e.png\";","export default __webpack_public_path__ + \"static/media/calc.f802c1db.png\";","export default __webpack_public_path__ + \"static/media/moovy.5245b3e1.png\";","export default __webpack_public_path__ + \"static/media/adopty.f928bda0.png\";","export default __webpack_public_path__ + \"static/media/handydietv2.d5e8c103.png\";","import { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faHome, faPencilRuler } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = () => {\n    const narrowLinks = useRef(null);\n\n    const handleToggle = () => {\n        narrowLinks.current.classList.toggle(\"hidden\");\n    };\n\n    const handleClose = () => {\n        narrowLinks.current.classList.add(\"hidden\");\n    };\n\n    return (\n        <section className=\"topnav\" id=\"myTopnav\">\n            <nav>\n                <div className=\"navWide\">\n                    <div className=\"wideDiv\">\n                        <Link to=\"/\"><FontAwesomeIcon icon={faHome} /> HOME</Link>\n                        <Link to=\"/projects\"><FontAwesomeIcon icon={faPencilRuler} /> PROJECTS</Link>\n                        <a href=\"https://github.com/zaknicholsdev\"><FontAwesomeIcon icon={faGithub} /> GITHUB</a>\n                    </div>\n                </div>\n                <div className=\"navNarrow\">\n                    <i onClick={handleToggle} className=\"fa fa-bars fa-2x\"></i>\n                    <div ref={narrowLinks} className=\"narrowLinks hidden\">\n                        <Link to=\"/\" onClick={handleClose}><FontAwesomeIcon icon={faHome} /> HOME</Link>\n                        <Link to=\"/projects\" onClick={handleClose}><FontAwesomeIcon icon={faPencilRuler} /> PROJECTS</Link>\n                        <a href=\"https://github.com/zaknicholsdev\" onClick={handleClose}><FontAwesomeIcon icon={faGithub} /> GITHUB</a>\n                    </div>\n                </div>\n            </nav>\n        </section>\n    );\n};\n\nexport default Navbar;","import { Fragment } from \"react\";\n\nconst Footer = () => {\n    return (\n        <Fragment>\n            <footer\n                style={{\n                    position: 'fixed',\n                    width: '100%',\n                    bottom: '0'\n                }}\n                className=\"footer\">\n                Made by Zak Nichols\n            </footer>\n        </Fragment>\n    );\n};\n\nexport default Footer;","import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport '../Pages/Home/css/index.css';\n\nconst CodeBlock = ({ value, language }) => {\n    return (\n        <SyntaxHighlighter style={tomorrow} language={language} children={value} />\n    );\n};\n\nexport default CodeBlock;","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport CodeBlock from './CodeBlock';\nimport '../App.css'\n\nconst Markdown = ({markdown, mdClassName}) => {\n    return (\n        <ReactMarkdown className={mdClassName} language={'javascript'} renderers={{code: CodeBlock}} children={markdown} />\n    );\n};\n\nexport default Markdown;","const { default: javascript } = require('../../assets/images/javascript.svg');\nconst { default: ionic } = require('../../assets/images/ionic.svg');\nconst { default: vue } = require('../../assets/images/vue.svg');\nconst { default: react } = require('../../assets/images/react.svg');\nconst { default: css } = require('../../assets/images/css.svg');\nconst { default: node } = require('../../assets/images/node.svg');\nconst { default: postgres } = require('../../assets/images/postgres.svg');\nconst { default: mysql } = require('../../assets/images/mysql.svg');\nconst { default: mongo } = require('../../assets/images/mongo.svg');\nconst { default: ubuntu } = require('../../assets/images/ubuntu.svg');\nconst { default: php } = require('../../assets/images/php.svg');\nconst { default: figma } = require('../../assets/images/figma.svg');\nconst { default: vscode } = require('../../assets/images/vscode.svg');\nconst { default: git } = require('../../assets/images/git.svg');\nconst { default: github } = require('../../assets/images/github.svg');\nconst { default: capacitor } = require('../../assets/images/capacitor.svg');\n\nexport {\n    javascript,\n    ionic,\n    vue,\n    react,\n    css,\n    node,\n    postgres,\n    mysql,\n    mongo,\n    ubuntu,\n    php,\n    figma,\n    vscode,\n    git,\n    github,\n    capacitor\n};","import { useEffect } from 'react';\nimport ScrollReveal from 'scrollreveal';\nimport {\n  javascript,\n  ionic,\n  vue,\n  react,\n  css,\n  node,\n  postgres,\n  mysql,\n  mongo,\n  ubuntu,\n  php,\n  figma,\n  vscode,\n  git,\n  github,\n  capacitor\n} from '../technologies';\n\nconst Technologies = () => {\n\n  useEffect(() => {\n    ScrollReveal({\n      duration: 1000,\n    })\n    const options = {\n      distance: '20px',\n      origin: 'left',\n      interval: 120,\n    };\n    const fadeOptions = {\n      interval: 480\n    }\n    ScrollReveal().reveal('.reveal', options)\n    ScrollReveal().reveal('.fade-reveal', fadeOptions)\n  }, []);\n\n  // TODO: Instead of html replace with a JSON\n  // array of objects about the technologies\n  // and map over the array.\n  return (\n    <section className=\"technologies mt-3 container\" style={{ marginBottom: '75px' }}>\n      <h1 className=\"header-links\"><strong>Technologies</strong></h1>\n      <h3 className=\"pt-3 header-links fade-reveal load-hidden\">Front End</h3>\n      <div id=\"front-end\" className=\"mx-3 icons\">\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={javascript} alt=\"\" />\n          <span>JavaScript</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={react} alt=\"\" />\n          <span>React</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={vue} alt=\"\" />\n          <span>Vue</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={ionic} alt=\"\" />\n          <span>Ionic</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={css} alt=\"\" />\n          <span>CSS</span>\n        </div>\n      </div>\n\n      <h3 className=\"pt-5 header-links fade-reveal load-hidden\">Back End</h3>\n      <div id=\"back-end\" className=\"mx-3 icons\">\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={node} alt=\"\" />\n          <span>Node</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={postgres} alt=\"\" />\n          <span>PostgreSQL</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={mysql} alt=\"\" />\n          <span>MySQL</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={mongo} alt=\"\" />\n          <span>MongoDB</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={php} alt=\"\" />\n          <span>PHP</span>\n        </div>\n      </div>\n\n      <h3 className=\"pt-5 header-links fade-reveal load-hidden\">DevOps & Tools</h3>\n      <div className=\"mx-3 icons\" id=\"dev-ops\">\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={git} alt=\"\" />\n          <span>Git</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={github} alt=\"\" />\n          <span>Github</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={capacitor} alt=\"\" />\n          <span>Capacitor</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={figma} alt=\"\" />\n          <span>Figma</span>\n        </div>\n        <div className=\"reveal load-hidden\">\n          <img className=\"img-responsive\" src={vscode} alt=\"\" />\n          <span>VSCode</span>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Technologies;","import { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faPencilRuler } from '@fortawesome/free-solid-svg-icons'\n\nconst Hero = () => {\n    return (\n        <section className=\"hero container my-3 hero-max-width\">\n            <h1 className=\"header-links mx-2 text-center\">\n                <strong>Hi, I'm Zak <span className=\"wave\">👋</span></strong>\n            </h1>\n            <p className=\"mt-3 mx-2\">\n                Software Developer from Elkhart, IN. Self-taught with a focus on functional programming. Interested in all front-end technologies.\n            </p>\n            <p className=\"mt-3 mx-2\">\n                Experience developing dynamic user interfaces in JavaScript, manipulating the DOM, managing state, consuming API's, HTTP Protocol,\n                writing queries in SQL, and building API's in Node with RESTful architecture.\n            </p>\n            <div className=\"hero-buttons text-center\">\n                <Link className=\"btn text-white m-2 py-2 header-links project-button\" to=\"/projects\">\n                    <FontAwesomeIcon icon={faPencilRuler} /><span> PROJECTS</span>\n                </Link>\n                <a className=\"btn text-white m-2 py-2 header-links project-button\" href=\"https://github.com/zaknicholsdev\">\n                    <FontAwesomeIcon icon={faGithub} /><span> GITHUB</span>\n                </a>\n            </div>\n        </section>\n    );\n};\nexport default Hero;","import React, { Fragment } from 'react';\nimport Markdown from '../../Markdown/Markdown';\nimport './css/index.css'\nimport Technologies from './components/Technologies';\nimport Hero from './components/Hero';\n\nconst Home = () => {\n\n  const mdWidth = 'md-width'\n  const markdown = `\n~~~js\nconst favParadigm = (paradigm) => \\`I love \\${paradigm} programming!\\`;\n~~~\n`\n  return (\n    <Fragment>\n      <Hero />\n      <Markdown markdown={markdown} mdClassName={mdWidth} />\n      <Technologies />\n    </Fragment>\n  );\n};\n\nexport default Home;\n\n","const { default: handyDiet } = require('../../assets/images/handydiet.png');\nconst { default: bedTime } = require('../../assets/images/bedtime.png');\nconst { default: calc } = require('../../assets/images/calc.png');\nconst { default: movieSearch } = require('../../assets/images/moovy.png');\nconst { default: adopty } = require('../../assets/images/adopty.png');\nconst { default: handydietV2 } = require('../../assets/images/handydietv2.png');\n\n\n\nexport {\n    handyDiet,\n    bedTime,\n    calc,\n    movieSearch,\n    adopty,\n    handydietV2\n};","import { faItalic } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport {\n    handyDiet,\n    bedTime,\n    movieSearch,\n    calc,\n    adopty,\n    handydietV2\n} from './projectsExports';\n\nconst Projects = () => {\n    const projects = [\n        {\n            name: 'bedtime-v2',\n            image: bedTime,\n            tech: [\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        },\n        {\n            name: 'Adopty',\n            image: adopty,\n            tech: [\n                { class: 'devicon-vuejs-plain colored mr-1' },\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        },\n        {\n            name: 'handydiet-v2',\n            image: handydietV2,\n            tech: [\n                { class: 'devicon-react-original colored mr-1' },\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        },\n        {\n            name: 'HandyDiet',\n            image: handyDiet,\n            tech: [\n                { class: 'devicon-react-original colored mr-1' },\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        },\n        {\n            name: 'MovieSearch',\n            image: movieSearch,\n            tech: [\n                { class: 'devicon-react-original colored mr-1' },\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        },\n        {\n            name: 'Calculator',\n            image: calc,\n            tech: [\n                { class: 'devicon-react-original colored mr-1' },\n                { class: 'devicon-javascript-plain colored mr-1' },\n                { class: 'devicon-html5-plain colored mr-1' },\n                { class: 'devicon-css3-plain colored' }\n            ]\n        }\n    ];\n\n    return (\n        <div>\n            <div className=\"container mt-2 hero-max-width\" style={{ margin: 'auto' }}>\n                <h1 className=\"header-links mx-2 text-center\" style={{ fontSize: '2.5em' }}>\n                    <strong>Projects</strong>\n                </h1>\n                <p>\n                    As a professional software developer I've crafted many solutions to many different problems.\n                    It's allowed me to see the many patterns and paradigms in JavaScript and it's ecosystem.\n                </p>\n                <p>I'm re-writing each project and including a tutorial in hopes that other's can get some benefit. In my experience building applications \n                    has been the most efficient way to grow.\n                </p>\n                <p>\n                    I'm a professional programmer, not a teacher. If I'm not clear or something doesn't make sense, I apologize. Send me an email and maybe I can help. - <a href=\"mailto:portfolio@zaknichols.com\">portfolio@zaknichols.com</a> \n                </p>\n            </div>\n            <div style={{ width: '75vw', margin: 'auto', display: 'flex', marginBottom: '40px', justifyContent: 'center', flexWrap: 'wrap' }}>\n                {projects.map((p, index) => {\n                    return (\n                        <div key={index} className=\"card m-3\" style={{ width: '18rem' }}>\n                            <img className=\"card-img-top\" src={p.image} alt=\"Project\" />\n                            <div className=\"card-body text-center\">\n                                <h5 className=\"card-title\">{p.name}</h5>\n                                <div>\n                                    {p.tech.map((t, index) => {\n                                        return (\n                                            <i key={index} style={{ fontSize: '1.5em' }} className={t.class} />\n                                        );\n                                    })}\n                                </div>\n                                <br />\n                                <Link to={`/project/${p.name}`} style={{ border: 'none', backgroundColor: '#1e2631' }} className=\"btn btn-primary\">View</Link>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default Projects","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\nconst BedTime = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    const width = \"w\"\n    const markdown = `\n# ${name.charAt(0).toUpperCase() + name.slice(1)} 🌒\n### [Live Demo](https://zaknicholsdev.github.io/bedtime-v2/)\n### [Code](https://github.com/zaknicholsdev/bedtime-v2)\n## What you will learn\n- First-class functions: [Ex: Assigning functions in variables](https://en.wikipedia.org/wiki/First-class_function)\n- Composability: [Writing modular and stateless functions](https://en.wikipedia.org/wiki/Composability#:~:text=Composability%20is%20a%20system%20design,to%20satisfy%20specific%20user%20requirements.)\n- Manipulating the DOM: [Check out MDN's event reference and try others!](https://developer.mozilla.org/en-US/docs/Web/Events)\n- The \\`Date()\\` object & constructor: [Details about the object and it's methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)\n- Pure functions and immutable data\n- Common patterns that bridge the gap between plain JavaScript and React.\n- Rendering HTML and CSS dynamically.\n- Form's and validation.\n### Before we dive in\nThe goal of this tutorial is to get you familiar with writing composable software. At the same time, manage statefulness. Almost every application we write will have end users triggering all sorts of events sending us different inputs to process and output back.  \n\nI/O [(input/output)](https://en.wikipedia.org/wiki/Input/output) is inherently impure. But, I/O can still be *pure*, if the passing of data is explicit as both an argument and a result and the I/O operations fail when the conditions we write aren't explicitly met.\n\nIn order for state to change things have to mutate. Mutations or state changes cause [side-effects](https://en.wikipedia.org/wiki/Side_effect_(computer_science)). What the functional paradigm will allow us to do is isolate our side-effects and easily note discrepencies in stateful code.\n\nHere's an example of what I mean when I say composability and first-class functions. Notice how composable or *expressive* the code is inside the function body of \\`getWakeUpTimes\\`.  \n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n    \n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const errors = isEmpty(hour, minute, period);\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const copy = sleepCycles.map(sleepCycle => new Date(sleepCycle.getTime()));\n\n    if (period === 'PM') {\n        subtractTwelveHours(period, copy);\n    };\n\n    if (hours === '12') {\n        addTwelveHours(hour, copy);\n    };\n\n    render(errors, toTwelveHourTimeString(copy));\n};\n~~~\n\nIt's comprised of smaller, more modular, functions. With a single responsibility. Assigning variables to functions to be passed as input.  \n\nThis code is impure, mind you. It changes the state of the document object model (DOM) and that's a side-effect. But, we can isolate our side-effects, test, and debug them much much easier than having one long function body with many stateful operations. \n\n#### Let's begin\nCreate a form with \\`id=\"calculate\\`. Inside the form create \\`select\\` elements for hours, minute, and period (AM and PM)\nGive each select element give an \\`id\\` to identify the hour, minute, and period\nAt the end of the form create a \\`button\\` element of \\`type=\"submit\\` for when we submit our form.\nNow let's add some JavaScript to make it dynamic.\n~~~html\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sleep Cycle Calculator</title>\n</head>\n<body>\n    <h1>Sleep Cycle Calculator</h1>\n    <form id=\"calculate\">\n        <label for=\"hour\">Hour:</label>\n        <select id=\"hour\">\n            <option value=\"\">Hour...</option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n            <option value=\"11\">11</option>\n            <option value=\"12\">12</option>\n        </select>\n    \n        <label for=\"minute\">Minute:</label>\n        <select id=\"minute\">\n            <option value=\"\">Minute...</option>\n            <option value=\"00\">00</option>\n            <option value=\"15\">15</option>\n            <option value=\"30\">30</option>\n            <option value=\"45\">45</option>\n        </select>\n    \n        <label for=\"period\">Period:</label>\n        <select id=\"period\">\n            <option value=\"\">AM or PM...</option>\n            <option value=\"AM\">AM</option>\n            <option value=\"PM\">PM</option>\n        </select>\n        <button type=\"submit\">Calculate</button>\n    </form>\n</body>\n</html>\n~~~\n\n#### Write a callback function to fire on submit event\nDeclare a variable \\`getWakeUpTimes(e)\\` and assign it to a function. Pass an \\`event\\` parameter \nand call \\`event.preventDefault()\\` to disable the default submission behavior.\n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n};\n~~~~\n\nNext declare a variable \\`form\\` and assign it to our form. Then call \\`addEventListener\\` \nand on submit fire our callback function \\`getWakeUpTimes\\`.\n\n~~~js\nconst form = document.querySelector('form#calculate');\nform.addEventListener('submit', getWakeUpTimes);\n~~~~\n\nIt wont do anything, yet. Let's create a function to get our values.\n\n#### Write a function to grab the select DOM nodes and return their values\nAssign four variables \\`results\\`, \\`selectHours\\`, \\`selectMinutes\\`, \\`selectPeriod\\` with \\`document.querySelector()\\` to reference the DOM nodes we'll interact with.\nReturn an object containing the \\`hour\\`, \\`minute\\`, and \\`period\\` variables.  \n\n~~~js\nconst getElements = () => {\n    const selectHours = document.querySelector('select#hour');\n    const selectMinutes = document.querySelector('select#minute');\n    const selectPeriod = document.querySelector('select#period');\n\n    const hour = selectHours.value;\n    const minute = selectMinutes.value;\n    const period = selectPeriod.value;\n\n    return { hour, minute, period };\n};\n~~~\n\nRemember our \\`getWakeUpTimes\\` function we created? Let's declare a variable \\`elems\\` insdie the function body and set it to our function. \nSince our function returns an object we can destructure our values \\`{ hours, minutes, period }\\` and use them as their variable names. \nWhen we log the object out to the console we can omit the object's key name if it's the same name as the property.\n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    console.log({ hour, minute, period });\n};\n~~~\n\nNow our form will log out our values! Let's go furthur.\n\n#### Get our sleep cycles  \nSo, let's think. What do we need to do when they submit the form? Whether it's pseudo-code or just some notes to think the logic through, it's always good to step back and think before coding.  \n\nWhen the user submit's their time from the form, instantiate a \\`Date\\` with \\`new Date()\\` and set the time back 9 hours, 7 hours and 30 minutes, 6 hours, 4 hours and 30 minutes to account for the sleep cycles. Declare a variable \\`getSleepCycles(hour, minute)\\`. Our function takes two parameters, hour and minute.\n\nReturn an array so we can use \\`Array\\` methods later.\n~~~js\nconst getSleepCycles = (hour, minute) => {\n    const firstCycle = new Date(null, null, null, hour - 9, minute);\n    const secondCycle = new Date(null, null, null, hour - 7, minute - 30);\n    const thirdCycle = new Date(null, null, null, hour - 6, minute);\n    const fourthCycle = new Date(null, null, null, hour - 4, minute - 30);\n\n    return [firstCycle, secondCycle, thirdCycle, fourthCycle];\n};\n~~~\n\nNow let's place this function after our \\`hour\\`, \\`minute\\`, and \\`period\\` variables. Try and submit the form now. \n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const sleepCycles = getSleepCycles(hour, minute);\n    console.log(sleepCycles);\n};\n~~~\n\nIn the console you'll get back an array of \\`Date\\` instances with the sleep cycles!\n\nUh oh... We got a bug. Try submitting the same hour and minutes for AM and PM. The output is the same. How can we fix that? Take a minute to think about it logically. Try implementing a solution before you go on.\nThis will be a large part of your job as a developer. Problem solving, pseudo-code, and thinking through the problem before you write code.\n#### Handle AM and PM\nHopefully you were able to find a solution. Let me explain my thought process and break it down. \nWhen we set the period to PM we're not accounting for our \\`Date\\` instance being 24 hour time. \nAt the moment our form only submits 00:00 to 12:00 (12:00 AM to 12:00 PM). \nAdd an \\`if\\` statement inside \\`getTimesToWakeUp\\` to check if our \\`period\\` variable is AM or PM. \n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const copy = sleepCycles.map(sleepCycle => new Date(sleepCycle.getTime()));\n\n    if (period === 'PM') {\n        subtractTwelveHours(copy);\n    };\n\n    console.log(copy);\n};\n~~~\n\nIf the period is PM then subtract 12 hours from each \\`Date\\`.\nNow we can submit from 12:00 to 24:00 (12:00 PM to 12:00 AM)!  \n\nLet's assign a variable to a function \\`subtractTwelveHours\\` to handle the PM logic. \n\n~~~js\nconst subtractTwelveHours = (sleepCyclesArr) => {\n    return sleepCyclesArr.map(sleepCycleObject => {\n        return sleepCycleObject.setHours(sleepCycleObject.getHours() - 12);\n    });\n};\n~~~\n\nWe can simply map over each object return the objects hours with \\`setHours()\\` passing our objects hours with \\`getHours()\\`.  \n\n#### Adjust for AM to PM switch when hour is 12\nWell... We have another bug to squash. That's the life of a programmer.\nWhen you submit the hour with a value of 12 it's not accounting for the the switch of AM to PM. \nAdd an \\`if\\` statement to check if the value was 12. \n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const copy = sleepCycles.map(sleepCycle => new Date(sleepCycle.getTime()));\n\n    if (period === 'PM') {\n        subtractTwelveHours(copy);\n    };\n\n    if (hours === '12') {\n        addTwelveHours(copy);\n    };\n\n    console.log(copy);\n};\n~~~\n\nNow to create the function to handle the logic. Assign another variable \\`addTwelveHours\\` to a function. \nAgain, use the \\`map\\` method to set the hours \\`setHours()\\` of our object by passing in the objects hours with \\`getHours()\\`. This time, adding 12 hours.\n\n~~~js\nconst addTwelveHours = (sleepCyclesArr) => {\n    return sleepCyclesArr.map(sleepCycleObject => {\n        return sleepCycleObject.setHours(sleepCycleObject.getHours() + 12);\n    });\n};\n~~~\n\n#### Handle form validation.\nWe don't want the user submitting a form with an empty value. \nAssign a variable \\`isEmpty()\\` to a function with parameters hour, minute, and period. \n an errors variable and set it to the element with the \\`id\\` of errors using \\`querySelector\\`. You can use \\`getElementById\\` as well. I only used \\`querySelector\\` to play with it.\nWrite an \\`if\\` statment to check the strict equality \\`===\\` of each argument value. \nIn an application that handles sensitive data you'd typically have more rigid form validation.  \n\n~~~js\nconst isEmpty = (hour, minute, period) => {\n    const errors = document.querySelector('div#errors');\n    if (hour === '' || minute === '' || period === '') {\n        errors.textContent = 'You must fill in the fields.';\n        errors.setAttribute('class', 'error');\n        return true;\n    };\n    errors.textContent = '';\n    return false;\n};\n~~~\n\nIf the text fields are empty the \\`textContent\\` property of our elements errors variable is set to a string: 'You must enter the fields.'\nOn the errors element call \\`setAttribute\\`. The first argument is the attribute name. In our case, a class. The second argument the value we want to set it to. A css class.\nNow call \\`return true\\` because our form is empty.\nIf the parameters pass our conditional then we'll just set the errors \\`textContent\\` property to an empty string.\nReturn false because our form is not empty.\nHere's the updated \\`getWakeUpTimes\\` function.\n\nYou can now add \\`isErrors\\` to our \\`getWakeUpTimes\\` function.\n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const isErrors = isEmpty(hour, minute, period);\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const copy = sleepCycles.map(sleepCycle => new Date(sleepCycle.getTime()));\n\n    if (period === 'PM') {\n        subtractTwelveHours(copy);\n    };\n\n    if (hour === '12') {\n        addTwelveHours(copy);\n    };\n};\n~~~\n\nLet's move on and format the date before we render.\n\n#### Set our date object to en-US 12-hour time with AM/PM\n\nNow assign a variable to a function \\`toTwelveHourTime()\\` to set our array sleep cycles to en-US. \nIt will take one parameter, our array of sleep cycles. \nDeclare a variable \\`options\\` as an object with three properties \\`hour\\`, \\`minute\\`, and \\`hour12\\`. \nWe'll pass this object to the method\\`toLocaleTimeString\\`.\n\nCall the map method on our sleep cycles array and return. In the map callback return each each object calling \\`toLocaleTimeString\\` and pass in a string \\`'en-US'\\` as the first parameter to specify our [locale](https://en.wikipedia.org/wiki/Locale_(computer_software)). \nThe second parameter will be an our \\`options\\` object describing how to output the time. [There are several options to configure.](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString).\n~~~js\nconst toTwelveHourTime = (sleepCyclesArr) => {\n    const options = { \n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: 'true'\n    }\n    return sleepCyclesArr.map(sleepCyclesObj => {\n        return sleepCyclesObj.toLocaleTimeString('en-US', options);\n    });\n};\n~~~\n\nNow we can use it to wrap our \\`copy\\` of sleep cycles array in our \\`getWakeUpTimes\\` function.\n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const isErrors = isEmpty(hour, minute, period);\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const copy = sleepCycles.map(sleepCycle => new Date(sleepCycle.getTime()));\n\n    if (period === 'PM') {\n        subtractTwelveHours(copy);\n    };\n\n    if (hour === '12') {\n        addTwelveHours(copy);\n    };\n\n    // render() does not exist, yet.\n    // We'll create it shortly.\n    render(isErrors, toTwelveHourTime(copy));\n};\n~~~\n\nLastly, it's time to create the \\`render\\` function.\n\n#### Rendering the sleep cycles or errors\nAssign a variable \\`results\\` to the div DOM node with the id of results.\nDeclare a variable \\`render\\` and assign it to a function. \nThis function will return a ternary.\nEither A string of HTML or an empty string depending on the value of \\`isErrors\\`.\nOur sleep cycles are in an array so we can grab their index and embed them in the HTML. \n\nHopefully now you can see why React is so popular. In plain JavaScript manipulating the DOM \nis tedious. Lots of \\`createElement\\`, \\`appendChild\\`, \\`textContent\\`, \\`innerHTML\\`, \\`insertAdjacentHTML\\`, \\`setAttribute\\`, etc. \nInstead with React we could return JSX. In my opinion our UI's are so tightly coupled to JavaScript it makes sense. I'm returning \nHTML as a string here. Why not return it with syntax highlighting and extended features? (If you can't tell I love React.)\n\n~~~js\nconst render = (isErrors, sleepCycles) => {\n    const results = document.querySelector('div#results');\n\n    return !isErrors ? results.innerHTML = \n    \\`\n        You should go to bed at:\n        <div>\n        \\${sleepCycles[0]}<span>, or</span>\n        \\${sleepCycles[1]}<span>, or</span>\n        \\${sleepCycles[2]}<span>, or</span>\n        \\${sleepCycles[3]}\n        </div>\n    \\` : results.textContent = '';\n};\n~~~\n\nFinally, let's add our \\`render\\` function to \\`getWakeUpTimes\\`.\n\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n\n    const elems = getElements();\n\n    const { hour, minute, period } = elems;\n\n    const isErrors = isEmpty(hour, minute, period);\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    if (period === 'PM') {\n        subtractTwelveHours(sleepCycles);\n    };\n\n    if (hour === '12') {\n        addTwelveHours(sleepCycles);\n    };\n\n    render(isErrors, toTwelveHourTime(sleepCycles));\n};\n~~~\n\n# Congratulations!\nThank you for taking the time to read my tutorial. I hope you got some value out of it. We touched on a lot of points that will hopefully give some insight into becoming a better developer. \nThis project is very practical. The same concepts and patterns you used here are very similar to what I do in my career. \nIf you'd like me to do a tutorial on the entire application with the animated background using canvas API send me an email. - <portfolio@zaknichols.com>\n`\n\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    );\n};\n\nexport default BedTime;","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\n\nconst HandyDiet = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    const width = \"w\"\n    const markdown = `\n# ${name} 🍔\n### [Live Demo](https://zaknicholsdev.github.io/HandyDiet/#/)\n### [Code](https://github.com/zaknicholsdev/HandyDiet)\n> EasyDiet is like a nutritionist in your pocket. Tell EasyDiet your target calories and diet type (keto, paleo, vegan, etc.) and EasyDiet will give you a custom daily or weekly diet. This app will fetch nutrition data such as macronutrients, calories, and details of recipes from the Spoonacular API. User interface built with React and data fetched from the Spoonacular API.\n`\n\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    );\n};\n\nexport default HandyDiet;","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\n\nconst Adopty = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    const width = \"w\"\n    const markdown = `\n# ${name} 🐾\n### [Live Demo](https://zaknicholsdev.github.io/Adopty/#/)\n### [Code](https://github.com/zaknicholsdev/Adopty)\n> Login as an administrator to manage inventory of cats and dogs. Visitors can view cats and dogs available for adoption. The admin can upload cats and dogs with various details and an image describing the adoptable pet. Built with Vue and Firebase.\n`\n\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    )\n}\n\nexport default Adopty;","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\n\nconst Calculator = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    const width = \"w\"\n    const markdown = `\n# ${name} 🖩\n### [Live Demo](https://zaknicholsdev.github.io/react-calculator/#/)\n### [Code](https://github.com/zaknicholsdev/react-calculator)\n> A calculator I built with React using functional components and hooks. There are several functions to handle the button events. Including handling operators, digits, screen-scaling, exponential notation, and more.\n`\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    );\n};\n\nexport default Calculator;","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\n\nconst MovieSearch = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n    const width = \"w\"\n    const markdown = `\n# ${name} 🎥\n### [Live Demo](https://zaknicholsdev.github.io/Moovy/#/)\n### [Code](https://github.com/zaknicholsdev/movie-search/tree/master)\n> Search for your favorite movie from the Open Movie Database (OMDB) API. You can view ratings, actors, posters, and plots of various different movies. Built with React to introduce myself to the new hooks API coming from classes.\n`\n\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    )\n}\n\nexport default MovieSearch;","import { useEffect } from 'react';\nimport Markdown from '../../../Markdown/Markdown';\n\nconst HandyDietV2 = ({ name }) => {\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, []);\n    const width = \"w\"\n    const markdown = `\n# ${name} 🥙\n### [Live Demo](https://zaknicholsdev.github.io/handydiet-v2/#/)\n### [Code](https://github.com/zaknicholsdev/handydiet-v2)\nThis project is a rewrite of my original Handy Diet application (still in progress..) migrating from class based components and lifecycle methods to functional components and hooks. This time with brand new features and user interface!  \n## Spoonacular API 🥄\n\nThe data comes from the third party API, Spoonacular. They're one of the largest nutritional API's and have plenty of different parameters to search for different meal plans, restaurant menu items, and recipes.\n\n### Get Started 🚀\n\n- sign up for API key on [Spoonacular Website](https://spoonacular.com/food-api).\n- click the green **Start Now** button in the top-right corner.\n- login and click **My Console** button in the top-right corner.\n- click **Profile** tab on left.\n- click **Show/Hide API Key** and copy the key.\n- clone repo.\n- create \\`.env\\` file inside root.\n- inside \\`.env\\` type \\`REACT_APP_SPOONACULAR_API_KEY=your api key here...\\`\n- run \\`npm install\\`.\n- run \\`npm start\\`.\n- live reload will serve at \\`http://localhost:3000\\`.\n`\n\n    return (\n        <div>\n            <Markdown markdown={markdown} mdClassName={width} />\n        </div>\n    );\n};\n\nexport default HandyDietV2;","import { useParams } from 'react-router-dom';\nimport './Project.css';\nimport BedTime from '../Details/BedTime';\nimport HandyDiet from '../Details/HandyDiet';\nimport Adopty from '../Details/Adopty';\nimport Calculator from '../Details/Calculator';\nimport MovieSearch from '../Details/MovieSearch';\nimport HandyDietV2 from '../Details/HandyDietV2';\n\nconst Project = () => {\n    const { name } = useParams();\n\n    switch (name) {\n        case 'bedtime-v2':\n            return <BedTime name={name} />\n        case 'HandyDiet':\n            return <HandyDiet name={name} />\n        case 'Adopty':\n            return <Adopty name={name} />\n        case 'Calculator':\n            return <Calculator name={name} />\n        case 'MovieSearch':\n            return <MovieSearch name={name} />\n        case 'handydiet-v2':\n            return <HandyDietV2 name={name} />\n        default:\n            return console.error(`Sorry, we are out of ${name}.`);\n    };\n};\n\nexport default Project;","import React, { Fragment, useEffect } from 'react'\nimport './App.css'\nimport {\n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\nimport Navbar from './Pages/Navbar/Navbar';\nimport Footer from './Pages/Footer/Footer';\nimport Home from './Pages/Home/Home';\nimport Projects from './Pages/Projects/Projects';\nimport Project from './Pages/Projects/Project/Project';\n\nconst App = () => {\n\n  useEffect(() => {\n    document.title = `Zak Nichols | Portfolio`\n  }, []);\n\n  // const history = useHistory();\n  // useEffect(() => {\n  //   history.listen(({ pathname }) => {\n  //     document.title = `Zak Nichols | ${pathname} | Portfolio`;\n  //   });\n  // }, [history.location.pathname]);\n\n  return (\n    <Fragment>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/projects\">\n          <Projects />\n        </Route>\n        <Route exact path=\"/project/:name\">\n          <Project />\n        </Route>\n      </Switch>\n      <Footer />\n    </Fragment>\n  );\n};\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}