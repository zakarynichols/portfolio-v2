(this["webpackJsonpportfolio-v2"]=this["webpackJsonpportfolio-v2"]||[]).push([[0],{422:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/javascript.2ccf65fc.svg"},423:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/ionic.7cf1fe37.svg"},424:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/vue.0b086d12.svg"},425:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/react.81db2bfe.svg"},426:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/css.c0d58b03.svg"},427:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/node.59c00966.svg"},428:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/postgres.6174db8b.svg"},429:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/mysql.64f88a81.svg"},430:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/mongo.042e003a.svg"},431:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/ubuntu.7d9bed33.svg"},432:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/php.8c49448b.svg"},433:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/figma.753c0742.svg"},434:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/vscode.f8f6eda9.svg"},435:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/git.a63f9eab.svg"},436:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/github.3ea7d9bc.svg"},437:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/capacitor.a27c08a6.svg"},438:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/handydiet.b0115a49.png"},439:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/bedtime.3656f40e.png"},440:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/calc.f802c1db.png"},441:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/moovy.5245b3e1.png"},442:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/adopty.f928bda0.png"},443:function(e,t,n){"use strict";n.r(t),t.default=n.p+"static/media/handydietv2.d5e8c103.png"},444:function(e,t,n){},445:function(e,t,n){"use strict";n.r(t);var a=n(0),s=n(1),i=n.n(s),o=n(87),r=n.n(o),c=n(7),l=(n(99),n(57),n(3)),d=n(12),u=n(25),m=n(20),h=function(){var e=Object(s.useRef)(null);return Object(a.jsx)("section",{className:"topnav",id:"myTopnav",children:Object(a.jsxs)("nav",{children:[Object(a.jsx)("div",{className:"navWide",children:Object(a.jsxs)("div",{className:"wideDiv",children:[Object(a.jsxs)(c.b,{to:"/",children:[Object(a.jsx)(d.a,{icon:m.a})," HOME"]}),Object(a.jsxs)(c.b,{to:"/projects",children:[Object(a.jsx)(d.a,{icon:m.b})," TUTORIALS"]}),Object(a.jsxs)("a",{href:"https://github.com/zaknicholsdev",children:[Object(a.jsx)(d.a,{icon:u.a})," GITHUB"]})]})}),Object(a.jsxs)("div",{className:"navNarrow",children:[Object(a.jsx)("i",{onClick:function(){e.current.classList.toggle("hidden")},className:"fa fa-bars fa-2x"}),Object(a.jsxs)("div",{ref:e,className:"narrowLinks hidden",children:[Object(a.jsxs)(c.b,{to:"/",children:[Object(a.jsx)(d.a,{icon:m.a})," HOME"]}),Object(a.jsxs)(c.b,{to:"/projects",children:[Object(a.jsx)(d.a,{icon:m.b})," TUTORIALS"]}),Object(a.jsxs)("a",{href:"https://github.com/zaknicholsdev",children:[Object(a.jsx)(d.a,{icon:u.a})," GITHUB"]})]})]})]})})},p=function(){return Object(a.jsx)(s.Fragment,{children:Object(a.jsx)("footer",{style:{position:"fixed",width:"100%",bottom:"0"},className:"footer",children:"Made by Zak Nichols"})})},b=n(89),j=n.n(b),f=n(449),v=n(448),g=(n(70),function(e){var t=e.value,n=e.language;return Object(a.jsx)(f.a,{style:v.a,language:n,children:t})}),y=function(e){var t=e.markdown,n=e.mdClassName;return Object(a.jsx)(j.a,{className:n,language:"javascript",renderers:{code:g},children:t})},O=n(36),x=n(422).default,w=n(423).default,k=n(424).default,C=n(425).default,S=n(426).default,N=n(427).default,T=n(428).default,D=n(429).default,A=n(430).default,M=(n(431).default,n(432).default),I=n(433).default,P=n(434).default,H=n(435).default,L=n(436).default,E=n(437).default,z=function(){return Object(s.useEffect)((function(){Object(O.a)({duration:1e3});Object(O.a)().reveal(".reveal",{distance:"20px",origin:"left",interval:120}),Object(O.a)().reveal(".fade-reveal",{interval:480})}),[]),Object(a.jsxs)("section",{className:"technologies mt-3 container",style:{marginBottom:"75px"},children:[Object(a.jsx)("h1",{className:"header-links",children:Object(a.jsx)("strong",{children:"Technologies"})}),Object(a.jsx)("h3",{className:"pt-3 header-links fade-reveal load-hidden",children:"Front End"}),Object(a.jsxs)("div",{id:"front-end",className:"mx-3 icons",children:[Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:x,alt:""}),Object(a.jsx)("span",{children:"JavaScript"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:C,alt:""}),Object(a.jsx)("span",{children:"React"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:k,alt:""}),Object(a.jsx)("span",{children:"Vue"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:w,alt:""}),Object(a.jsx)("span",{children:"Ionic"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:S,alt:""}),Object(a.jsx)("span",{children:"CSS"})]})]}),Object(a.jsx)("h3",{className:"pt-5 header-links fade-reveal load-hidden",children:"Back End"}),Object(a.jsxs)("div",{id:"back-end",className:"mx-3 icons",children:[Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:N,alt:""}),Object(a.jsx)("span",{children:"Node"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:T,alt:""}),Object(a.jsx)("span",{children:"PostgreSQL"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:D,alt:""}),Object(a.jsx)("span",{children:"MySQL"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:A,alt:""}),Object(a.jsx)("span",{children:"MongoDB"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:M,alt:""}),Object(a.jsx)("span",{children:"PHP"})]})]}),Object(a.jsx)("h3",{className:"pt-5 header-links fade-reveal load-hidden",children:"DevOps & Tools"}),Object(a.jsxs)("div",{className:"mx-3 icons",id:"dev-ops",children:[Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:H,alt:""}),Object(a.jsx)("span",{children:"Git"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:L,alt:""}),Object(a.jsx)("span",{children:"Github"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:E,alt:""}),Object(a.jsx)("span",{children:"Capacitor"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:I,alt:""}),Object(a.jsx)("span",{children:"Figma"})]}),Object(a.jsxs)("div",{className:"reveal load-hidden",children:[Object(a.jsx)("img",{className:"img-responsive",src:P,alt:""}),Object(a.jsx)("span",{children:"VSCode"})]})]})]})},U=function(){return Object(a.jsxs)("section",{className:"hero container my-3 hero-max-width text-center",children:[Object(a.jsx)("h1",{className:"header-links mx-2",children:Object(a.jsxs)("strong",{children:["Hi, I'm Zak ",Object(a.jsx)("span",{className:"wave",children:"\ud83d\udc4b"})]})}),Object(a.jsx)("p",{className:"mt-3 mx-2",children:"UI/UX Developer from Elkhart, IN. Self-taught with a focus on functional programming. Interested in all front-end technologies."}),Object(a.jsx)("p",{children:"Experience developing dynamic user interfaces in JavaScript, DOM manipulation, managing state, consuming API's, HTTP Protocol, writing queries in SQL, and building API's in Node with RESTful architecture."}),Object(a.jsxs)("div",{className:"hero-buttons text-center",children:[Object(a.jsxs)(c.b,{className:"btn text-white m-2 py-2 header-links project-button",to:"/projects",children:[Object(a.jsx)(d.a,{icon:m.b}),Object(a.jsx)("span",{children:" TUTORIALS"})]}),Object(a.jsxs)("a",{className:"btn text-white m-2 py-2 header-links project-button",href:"https://github.com/zaknicholsdev",children:[Object(a.jsx)(d.a,{icon:u.a}),Object(a.jsx)("span",{children:" GITHUB"})]})]})]})},R=function(){return Object(a.jsxs)(s.Fragment,{children:[Object(a.jsx)(U,{}),Object(a.jsx)(y,{markdown:"\n~~~js\nconst favParadigm = (paradigm) => `I love ${paradigm} programming!`;\n~~~\n",mdClassName:"md-width"}),Object(a.jsx)(z,{})]})},W=n(438).default,B=n(439).default,q=n(440).default,F=n(441).default,_=n(442).default,J=n(443).default,G=function(){var e=[{name:"bedtime-v2",image:B,tech:[{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]},{name:"Adopty",image:_,tech:[{class:"devicon-vuejs-plain colored mr-1"},{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]},{name:"handydiet-v2",image:J,tech:[{class:"devicon-react-original colored mr-1"},{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]},{name:"HandyDiet",image:W,tech:[{class:"devicon-react-original colored mr-1"},{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]},{name:"MovieSearch",image:F,tech:[{class:"devicon-react-original colored mr-1"},{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]},{name:"Calculator",image:q,tech:[{class:"devicon-react-original colored mr-1"},{class:"devicon-javascript-plain colored mr-1"},{class:"devicon-html5-plain colored mr-1"},{class:"devicon-css3-plain colored"}]}];return Object(a.jsx)("div",{style:{width:"75vw",margin:"auto",display:"flex",marginBottom:"40px",justifyContent:"center",flexWrap:"wrap"},children:e.map((function(e,t){return Object(a.jsxs)("div",{className:"card m-3",style:{width:"18rem"},children:[Object(a.jsx)("img",{className:"card-img-top",src:e.image,alt:"Card image cap"}),Object(a.jsxs)("div",{className:"card-body text-center",children:[Object(a.jsx)("h5",{className:"card-title",children:e.name}),Object(a.jsx)("div",{children:e.tech.map((function(e){return Object(a.jsx)("i",{style:{fontSize:"2.5em"},className:e.class})}))}),Object(a.jsx)("br",{}),Object(a.jsx)(c.b,{to:"/project/".concat(e.name),style:{border:"none",backgroundColor:"#1e2631"},className:"btn btn-primary",children:"View"})]})]},t)}))})},Y=(n(444),function(e){var t=e.name,n="\n# ".concat(t," \ud83c\udf12\n### [Live Demo](https://zaknicholsdev.github.io/bedtime-v2/)\n### [Code](https://github.com/zaknicholsdev/bedtime-v2)\n### This tutorial should be finished here shortly! Thanks for the patience.\n## *What you will learn*\n- First-class functions: [Ex: Assigning functions in variables](https://en.wikipedia.org/wiki/First-class_function)\n- Composability: [Writing modular and stateless functions](https://en.wikipedia.org/wiki/Composability#:~:text=Composability%20is%20a%20system%20design,to%20satisfy%20specific%20user%20requirements.)\n- Manipulating the DOM: [Check out MDN's event reference and try others!](https://developer.mozilla.org/en-US/docs/Web/Events)\n- The `Date()` object & constructor: [Details about the object and it's methods](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)\n- Pure functions and immutable data\n- Common patterns that bridge the gap between plain JavaScript and React.\n- Rendering HTML and CSS dynamically.\n- Form's and validation.\n## Before we dive in\n>  The goal of this tutorial is to teach you how to write composable software. At the same time, manage statefulness. Almost every application we write will have end users triggering all sorts of events sending us different inputs to process and output back.  \n\n> I/O [(input/output)](https://en.wikipedia.org/wiki/Input/output) is inherently impure. But, I/O can still be 'pure', if the passing of data is explicit as both an argument and a result and I/O operations will fail when the conditions we write aren't explicitly met.\n\n> In order for state to change things have to *mutate*. Mutations or state changes cause [*side-effects*](https://en.wikipedia.org/wiki/Side_effect_(computer_science)). What the functional paradigm will allow us to do is isolate our side-effects and easily note discrepencies in stateful code.\n\n> Here's an example in this codebase how JavaScript allows *first-class* functions. We can cleanly compose effectful code. Skim over it and then I'll show you how to build it from scratch.\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n    \n    const elems = getDOMelements();\n\n    const { hour, minute, period } = elems\n\n    const errors = isEmpty(hour, minute, period);\n\n    const sleepCycles = getSleepCycles(hour, minute);\n\n    const sleepCyclesPM = setSleepCyclesPM(period, sleepCycles);\n\n    const twelve = setSleepCyclesTwelve(hour, sleepCyclesPM);\n\n    const cycles = toTwelveHourTimeString(twelve);\n\n    render(errors, cycles);\n};\n~~~\n##### Create a form for JavaScript to interact with\n> - Create a form with `id=\"calculate`. Inside the form create `select` elements for hours, minute, and period (AM and PM)\n> - Give each select element give an `id` to identify the hour, minute, and period\n> - At the end of the form create a `button` element of `type=\"submit` for when we submit our form.\n> - Now let's add some JavaScript to make it dynamic.\n~~~html\n<form id=\"calculate\">\n    <label for=\"hour\">Hour:</label>\n    <select id=\"hour\">\n        <option value=\"\">Hour...</option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n    </select>\n\n    <label for=\"minute\">Minute:</label>\n    <select id=\"minute\">\n        <option value=\"\">Minute...</option>\n        <option value=\"00\">00</option>\n        <option value=\"15\">15</option>\n        <option value=\"30\">30</option>\n        <option value=\"45\">45</option>\n    </select>\n\n    <label for=\"period\">Period:</label>\n    <select id=\"period\">\n        <option value=\"\">AM or PM...</option>\n        <option value=\"AM\">AM</option>\n        <option value=\"PM\">PM</option>\n    </select>\n    <button type=\"submit\">Calculate</button>\n</form>\n~~~\n##### Write a callback function to fire on submit event\n> - Create a function `getWakeUpTimes(e)` that we'll pass as a callback to `addEventListener` later\n> - Pass event as the only parameter and call `event.preventDefault()` to disable the default form submitting behavior so we can customize the submission\n> - Assign four variables `results`, `selectHours`, `selectMinutes`, `selectPeriod` with `document.querySelector()` to reference the DOM nodes we'll interact with\n~~~js\nconst getWakeUpTimes = (event) => {\n    event.preventDefault();\n    const results = document.querySelector('div#results');\n    const selectHours = document.querySelector('select#hour');\n    const selectMinutes = document.querySelector('select#minute');\n    const selectPeriod = document.querySelector('select#period');\n};\n~~~\n##### Listen for the form to submit.\n> - Assign a variable to our dom node with `querySelector()`. Alternatively you can use `getElementById()`.\n> - Attach an event listener `addEventListener()`. to the `form` variable. The first parameter being a string with the event name. In our case, `'submit'`. The second parameter is a callback function that we want to invoke when submitted.\n~~~js\nconst form = document.querySelector('form#calculate');\nform.addEventListener('submit', getWakeUpTimes);\n\n// This is the same as above.\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n    The rest of the function body...\n});\n~~~\n##### Step: Get our sleep cycles  \n> - Create a first-class function called `getSleepCycles(hour, minute)` that we'll assign to a variable later.\n> - Our function `getSleepCycles(hour, minute)` takes two parameters, hour and minute.\n> - For each sleep cycle, instantiate a new `Date` by calling the `new Date()` constructor and assign it to a variable.  \n> - We only need the hours and minutes so we can omit the first three parameters of the `Date`. \n> - [Check out Mozilla's](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Syntax) `Date()` constructor docs to see the other parameters like year, month, etc. or know more about the `Date()` constructor.\n> - On each subsequent cycle variable subtract one hour and thirty minutes.\n> - Return an array so we can use `Array` methods later.\n~~~js\nconst getSleepCycles = (hour, minute) => {\n    const firstCycle = new Date(null, null, null, hour - 9, minute);\n    const secondCycle = new Date(null, null, null, hour - 7, minute - 30);\n    const thirdCycle = new Date(null, null, null, hour - 6, minute);\n    const fourthCycle = new Date(null, null, null, hour - 4, minute - 30);\n\n    return [firstCycle, secondCycle, thirdCycle, fourthCycle];\n};\n~~~\n##### Step: Handle AM and PM\n> - Let's make a function `setSleepCyclesPM(period, sleepCyclesArray)` whose parameters are the period ('AM' or 'PM') and the array of sleep cycles we returned earlier.\n> - Copy our `Date` by mapping through the dates and calling the `new Date()` constructor. You can't just use spread syntax `[...]` because inside the array are instances of `Date` data-type not `Object`.  \n> - Inside our function body write an `if` statement to check the strict equality `===` of the period argument and the 'AM' or 'PM' string that comes from our form.\n> - If our conditional is true, then create a cycles variable and set it to our sleepCyclesArray and call `map`.\n> - Inside the `map` callback function create a variable to get the hours `getHours() - 12` of each sleep cycle we mapped.\n> - Set every mapped sleepCycle object's hours `setHours()` to our hours variable.\n> - The last thing we want to do is simple return our new array of sleep cycles!\n> - Since `map` is an pure method it returns a copy of the array it mapped.\n~~~js\nconst setSleepCyclesPM = (period, sleepCyclesArray) => {\n    const copy = sleepCyclesArray.map(s => new Date(s.getTime()))\n    if (period === 'PM') {\n        return copy.map(sleepCycleObject => {\n            const hours = sleepCycleObject.getHours() - 12;\n            sleepCycleObject.setHours(hours);\n            return sleepCycleObject;\n        });\n    };\n    return copy;\n};\n~~~\n##### Step: Convert 24 hour to 12 hour\n> - Our app works nicely until you try and calculate a time with the hour 12.\n> - Our date objects are being instantiated as 24 hour time zones, but we need twelve.\n> - Let's write a function `setSleepCyclesTwelve(hours, sleepCyclesArray)` whose parameters are the hours input and array of sleep cycles.\n> - Just like before let's write another conditional. This time, to check if the hours input is 12.\n> - If so, inside the `map` callback function create an hours variable to get the hours `getHours()`.\n> - Call `setHours()` on each sleep cycle object and pass in hours variable as it's parameter.\n> - Return the new array of sleep cycles. Again, using the pure `map` method to not mutate our data\n~~~js\nconst setSleepCyclesTwelve = (hour, sleepCyclesArray) => {\n    const copy = sleepCyclesArray.map(s => new Date(s.getTime()))\n    if (hour === '12') {\n        return copy.map(sleepCycleObject => {\n            const hours = sleepCycleObject.getHours() + 12\n            sleepCycleObject.setHours(hours);\n        });\n    };\n    return copy;\n};\n~~~\n##### Step: Handle form validation.\n> - We don't want the user submitting a form with an empty value. Let's fix that.\n> - Write a function `isEmpty()` whose parameters are the hour, minute, and period.\n> - Create an errors variable and set it to the DOM element with the `id` of errors using `querySelector`. You can use `getElementById` as well. I only used `querySelector` to play with it.\n> - Write an `if` statment to check the strict equality `===` of each argument value.\n> - If they're empty the `textContent` property of our DOM element errors variable to a string 'You must enter the fields.'\n> - On the errors DOM element call `setAttribute`. The first argument is the attribute name. In our case, a class. The second argument the value we want to set it to. In our case, it's a css class in our `styles.css` file.\n> - Return true as our function expression's name is `isEmpty` because our form is in fact, empty.\n> - If the parameters pass our conditional then we'll just set the errors DOM element `textContent` property to an empty string.\n> - Return false because, well, `isEmpty` is false.\n> - Since `isEmpty` is a first-class function and returns a `Boolean` we can use it later to determine whether or not to render errors or the sleep cycles.\n~~~js\nconst isEmpty = (hour, minute, period) => {\n    const errors = document.querySelector('div#errors');\n    if (hour === '' || minute === '' || period === '') {\n        errors.textContent = 'You must fill in the fields.';\n        errors.setAttribute('class', 'error');\n        return true;\n    };\n    errors.textContent = '';\n    return false;\n};\n~~~\n##### Step: Set our date object to en-US 12-hour time with AM/PM\n> - Now let's create a function `toTwelveHourTimeString()` to set our array sleep cycles to en-US\n> - It will take one parameter, our array of sleep cycles.\n> - Now we're going to assign a variable `twelveHourArr` to a function `map`.\n> - On each iteration we'll call the method `toLocaleTimeString` on each object and before pass in a string as the first paramater to specify our [locale](https://en.wikipedia.org/wiki/Locale_(computer_software)). The second parameter will be an object with properties describing how we'd like our `Date` object.\n> - By now you already know this, but make sure to explicitly `return` each object in multi-line arrow functions. In contrast to a single line arrow function in which you can omit the return\n> - The assigned variable will hold the new returned array of sleep cycles\n~~~js\nconst toTwelveHourTimeString = (arr) => {\n    const twelveHourArr = arr.map(obj => {\n        return obj.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n    });\n};\n~~~\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})}),V=function(e){var t=e.name,n="\n# ".concat(t," \ud83c\udf54\n### [Live Demo](https://zaknicholsdev.github.io/HandyDiet/#/)\n### [Code](https://github.com/zaknicholsdev/HandyDiet)\n*Tutorial coming soon!*\n> EasyDiet is like a nutritionist in your pocket. Tell EasyDiet your target calories and diet type (keto, paleo, vegan, etc.) and EasyDiet will give you a custom daily or weekly diet. This app will fetch nutrition data such as macronutrients, calories, and details of recipes from the Spoonacular API. User interface built with React and data fetched from the Spoonacular API.\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})},Q=function(e){var t=e.name,n="\n# ".concat(t," \ud83d\udc3e\n### [Live Demo](https://zaknicholsdev.github.io/Adopty/#/)\n### [Code](https://github.com/zaknicholsdev/Adopty)\n*Tutorial coming soon!*\n> Login as an administrator to manage inventory of cats and dogs. Visitors can view cats and dogs available for adoption. The admin can upload cats and dogs with various details and an image describing the adoptable pet. Built with Vue and Firebase.\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})},K=function(e){var t=e.name,n="\n# ".concat(t," \ud83d\udda9\n### [Live Demo](https://zaknicholsdev.github.io/react-calculator/#/)\n### [Code](https://github.com/zaknicholsdev/react-calculator)\n> A calculator I built with React using functional components and hooks. There are several functions to handle the button events. Including handling operators, digits, screen-scaling, exponential notation, and more.\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})},Z=function(e){var t=e.name,n="\n# ".concat(t," \ud83c\udfa5\n### [Live Demo](https://zaknicholsdev.github.io/Moovy/#/)\n### [Code](https://github.com/zaknicholsdev/movie-search/tree/master)\n> Search for your favorite movie from the Open Movie Database (OMDB) API. You can view ratings, actors, posters, and plots of various different movies. Built with React to introduce myself to the new hooks API coming from classes.\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})},X=function(e){var t=e.name,n="\n# ".concat(t," \ud83e\udd59\n### [Live Demo](https://zaknicholsdev.github.io/handydiet-v2/#/)\n### [Code](https://github.com/zaknicholsdev/handydiet-v2)\n*Tutorial coming soon!*  \nThis project is a rewrite of my original Handy Diet application migrating from class based components and lifecycle methods to functional components and hooks. This time with brand new features and user interface!  \n## Spoonacular API \ud83e\udd44\n\nThe data comes from the third party API, Spoonacular. They're one of the largest nutritional API's and have plenty of different parameters to search for different meal plans, restaurant menu items, and recipes.\n\n### Get Started \ud83d\ude80\n\n- sign up for API key on [Spoonacular Website](https://spoonacular.com/food-api).\n- click the green **Start Now** button in the top-right corner.\n- login and click **My Console** button in the top-right corner.\n- click **Profile** tab on left.\n- click **Show/Hide API Key** and copy the key.\n- clone repo.\n- create `.env` file inside root.\n- inside `.env` type `REACT_APP_SPOONACULAR_API_KEY=your api key here...`\n- run `npm install`.\n- run `npm start`.\n- live reload will serve at `http://localhost:3000`.\n");return Object(a.jsx)("div",{children:Object(a.jsx)(y,{markdown:n,mdClassName:"w"})})},$=function(){var e=Object(l.f)().name;switch(e){case"bedtime-v2":return Object(a.jsx)(Y,{name:e});case"HandyDiet":return Object(a.jsx)(V,{name:e});case"Adopty":return Object(a.jsx)(Q,{name:e});case"Calculator":return Object(a.jsx)(K,{name:e});case"MovieSearch":return Object(a.jsx)(Z,{name:e});case"handydiet-v2":return Object(a.jsx)(X,{name:e});default:return console.error("Sorry, we are out of ".concat(e,"."))}},ee=function(){return Object(a.jsxs)(s.Fragment,{children:[Object(a.jsx)(h,{}),Object(a.jsxs)(l.c,{children:[Object(a.jsx)(l.a,{exact:!0,path:"/",children:Object(a.jsx)(R,{})}),Object(a.jsx)(l.a,{path:"/projects",children:Object(a.jsx)(G,{})}),Object(a.jsx)(l.a,{path:"/project/:name",children:Object(a.jsx)($,{})})]}),Object(a.jsx)(p,{})]})},te=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,450)).then((function(t){var n=t.getCLS,a=t.getFID,s=t.getFCP,i=t.getLCP,o=t.getTTFB;n(e),a(e),s(e),i(e),o(e)}))};r.a.render(Object(a.jsx)(i.a.StrictMode,{children:Object(a.jsx)(c.a,{children:Object(a.jsx)(ee,{})})}),document.getElementById("root")),te()},57:function(e,t,n){},70:function(e,t,n){},99:function(e,t,n){}},[[445,1,2]]]);
//# sourceMappingURL=main.a18bba03.chunk.js.map